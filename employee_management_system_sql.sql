USE EMS;
SELECT * FROM EMPLOYEE;
SELECT * FROM JOB_TITLE;
SELECT * FROM DEPARTMENT;
SELECT * FROM SALARY;
SELECT * FROM PROJECT;
SELECT * FROM PROJECT_ALLOCATION;
SELECT * FROM ATTENDANCE;

-- 1. Question: Retrieve the first and last names of all employees.

SELECT FIRST_NAME, LAST_NAME 
FROM EMPLOYEE;

-- 2. Retrieve the first and last names of employees who work as 'Software Engineer'.
SELECT FIRST_NAME, LAST_NAME 
FROM EMPLOYEE
WHERE JOBTITLE_ID = (SELECT JOBTITLE_ID FROM JOB_TITLE
                     WHERE JOBTITLE_NAME = 'SOFTWARE ENGINEER'); -- SUBQUERY

-- 3. Question: Retrieve first names and last names of last 7 hires
SELECT TOP 7 FIRST_NAME, LAST_NAME
FROM EMPLOYEE 
ORDER BY HIRE_DATE DESC;

-- 4. Question: Get the count of employees in each job title.
SELECT JOBTITLE_NAME, COUNT(EMPLOYEE_ID) EMPLOYEE_COUNT
FROM EMPLOYEE E
INNER JOIN JOB_TITLE J
ON E.JOBTITLE_ID = J.JOBTITLE_ID
GROUP BY J.JOBTITLE_NAME;

-- 5. Question: Retrieve the full name & other personal info of employees who work in the 'Engineering' department.

SELECT CONCAT(FIRST_NAME,' ', LAST_NAME) FULL_NAME, DOB, GENDER, PHONE_NO, EMAIL 
FROM EMPLOYEE E
INNER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.DEPARTMENT_NAME = 'ENGINEERING';

-- 6. Question: List job titles that have more than 3 employees.
SELECT JOBTITLE_NAME, COUNT(EMPLOYEE_ID) EMPLOYEE_COUNT
FROM EMPLOYEE E 
INNER JOIN JOB_TITLE J
ON
E.JOBTITLE_ID = J.JOBTITLE_ID
GROUP BY J.JOBTITLE_NAME
HAVING COUNT(EMPLOYEE_ID) > 3;

-- 7. Question: Retrieve all employee names along with their department names.

SELECT CONCAT(FIRST_NAME,' ', LAST_NAME) AS EMPLOYEE_NAME, DEPARTMENT_NAME
FROM EMPLOYEE E
INNER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 8. Question: Retrieve the first names of employees and the projects they are working on, along with their role in the project.

SELECT FIRST_NAME, PROJECT_NAME, JOBTITLE_NAME AS 'ROLE'
FROM EMPLOYEE E
INNER JOIN JOB_TITLE J 
ON E.JOBTITLE_ID = J.JOBTITLE_ID
INNER JOIN PROJECT_ALLOCATION PA
ON E.EMPLOYEE_ID = PA.EMPLOYEE_ID
INNER JOIN PROJECT P
ON P.PROJECT_ID = PA.PROJECT_ID;

-- 9. Question: Get the count of employees in each department

SELECT COUNT(EMPLOYEE_ID) COUNT_OF_EMPLOYEES, DEPARTMENT_NAME
FROM EMPLOYEE E 
INNER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME;

-- 10. Question: List all departments with more than 5 employees.

SELECT COUNT(EMPLOYEE_ID) COUNT_OF_EMPLOYEES, DEPARTMENT_NAME
FROM EMPLOYEE E 
INNER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME
HAVING COUNT(EMPLOYEE_ID)>5;

-- 11. Question: Retrieve the full names of employees and their managers.

SELECT CONCAT(E.FIRST_NAME,' ', E.LAST_NAME) EMPLOYEE_NAME,
CONCAT(M.FIRST_NAME,' ', M.LAST_NAME) MANAGER_NAME
FROM EMPLOYEE E
INNER JOIN EMPLOYEE M -- SELF JOIN
ON E.MANAGER_ID = M.EMPLOYEE_ID;

-- 12. Question: Which manager is managing more employees and how many


SELECT TOP 1
CONCAT(M.FIRST_NAME,' ', M.LAST_NAME) MANAGER_NAME, COUNT(E.EMPLOYEE_ID) EMPLOYEE_COUNT
FROM EMPLOYEE E
INNER JOIN EMPLOYEE M -- SELF JOIN
ON E.MANAGER_ID = M.EMPLOYEE_ID 
GROUP BY M.EMPLOYEE_ID, M.FIRST_NAME, M.LAST_NAME
ORDER BY COUNT(E.EMPLOYEE_ID) DESC;

-- 13. Question: Retrieve names of employees working on projects as 'Software Engineer', ordered by project start date

SELECT FIRST_NAME, LAST_NAME, PROJECT_NAME , START_DATE
FROM EMPLOYEE E 
INNER JOIN JOB_TITLE J
ON E.JOBTITLE_ID = J.JOBTITLE_ID
INNER JOIN PROJECT_ALLOCATION PA
ON E.EMPLOYEE_ID = PA.EMPLOYEE_ID
INNER JOIN PROJECT P
ON P.PROJECT_ID = PA.PROJECT_ID
WHERE JOBTITLE_NAME = 'SOFTWARE ENGINEER'
ORDER BY START_DATE

-- 14. Question: Retrieve the names of employees who are working on 'Project Delta'.

SELECT FIRST_NAME, LAST_NAME, PROJECT_NAME
FROM EMPLOYEE E 
INNER JOIN JOB_TITLE J
ON E.JOBTITLE_ID = J.JOBTITLE_ID
INNER JOIN PROJECT_ALLOCATION PA
ON E.EMPLOYEE_ID = PA.EMPLOYEE_ID
INNER JOIN PROJECT P
ON P.PROJECT_ID = PA.PROJECT_ID
WHERE PROJECT_NAME = 'PROJECT DELTA';

-- 15. Question: Retrieve the names of employees, department name, and total salary, ordered by total salary in descending order
SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_NAME, (BASE_SALARY + BONUS - DEDUCTIONS) TOTAL_SALARY
FROM EMPLOYEE E
INNER JOIN SALARY S
ON E.EMPLOYEE_ID = S.EMPLOYEE_ID
INNER JOIN DEPARTMENT D
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
ORDER BY TOTAL_SALARY DESC;

-- 16. Question: Create a function to find employees with a birthday in the given month and calculate their age
GO
CREATE FUNCTION GET_BIRTHDATE(@MONTH INT)
RETURNS TABLE
AS
RETURN
(SELECT FIRST_NAME, LAST_NAME, DOB, YEAR(GETDATE()) - YEAR(DOB) AGE
FROM EMPLOYEE
WHERE MONTH(DOB) = @MONTH)
GO;

SELECT * FROM DBO.GET_BIRTHDATE(2)
SELECT * FROM DBO.GET_BIRTHDATE(11)